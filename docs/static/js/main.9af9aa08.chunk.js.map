{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","categories","type","input","onChange","target","value","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifts","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","setCategories","ReactDOM","render","document","getElementById"],"mappings":"mMA4BeA,EAzBK,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,YAAgB,EAEGC,mBAAS,aAFZ,mBAE3BC,EAF2B,KAEfC,EAFe,KAalC,OACI,sBAAMC,SANW,SAACC,GAClBA,EAAEC,iBACFN,GAAY,SAAAO,GAAU,OAAKL,GAAL,mBAAmBK,QAIzC,SACI,uBAAOC,KAAO,OAAOC,MAAOP,EAAYQ,SAXtB,SAACL,GACvBF,EAAcE,EAAEM,OAAOC,a,+BCRlBC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAECI,MAAMF,GAFP,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAQD,EAAKE,KAAI,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QARtB,kBAWZM,GAXY,4CAAH,sDCWLO,EATM,SAAC,GAAoB,EAAnBJ,GAAoB,IAAhBC,EAAe,EAAfA,MAAOV,EAAQ,EAARA,IAC9B,OACI,sBAAKc,UAAU,yDAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAON,IACxB,4BAAIA,QCqBDO,EAvBC,SAAC,GAAe,IAAdnB,EAAa,EAAbA,SAAa,ECDH,SAACA,GAAa,IAAD,EACXb,mBAAS,CAC/BoB,KAAK,GACLa,SAAQ,IAHyB,mBAC9BC,EAD8B,KACvBC,EADuB,KASrC,OAJAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAAAC,GAAI,OAAIH,EAAS,CAACf,KAAKkB,EAAKL,SAAQ,SAC5D,CAACpB,IAEGqB,EDNwBK,CAAa1B,GAAhCa,EAFe,EAEpBN,KAAaa,EAFO,EAEPA,QAEpB,OACI,qCACA,oBAAIJ,UAAU,oDAAd,SAAmEhB,IAClEoB,GAAW,mBAAGJ,UAAU,mDAAb,qBAEZ,qBAAKA,UAAU,YAAf,SACI,6BAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAA+BA,GAAbA,EAAIC,eES/BgB,EAtBM,WAAM,IAAD,EAEUxC,mBAAS,CAAC,cAFpB,mBAEnBM,EAFmB,KAERmC,EAFQ,KAM1B,OACQ,qCACE,8CACA,cAAC,EAAD,CAAa1C,YAAc0C,IAC3B,uBACA,6BAEQnC,EAAWgB,KAAI,SAACT,GAAD,OACT,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCbtC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9af9aa08.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst AddCategory = ({setCategory})=> {\n    \n    const [inputValue, setInputValue] =  useState(\"Type Here\")\n    \n    const handleInputChange = (e)=>{\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e)=>{\n        e.preventDefault();\n        setCategory(categories => [inputValue,...categories])\n    }\n    \n    return (\n        <form onSubmit={handleSubmit}>\n            <input type = 'text' input={inputValue} onChange= {handleInputChange}/>  \n        </form>\n    \n    )\n}\n\nAddCategory.propTypes = {\n    setCategory: PropTypes.func.isRequired\n}\n\nexport default AddCategory","export const getGifs = async(category)=>{\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=izm06ldCbnn0OYrKIVd0xCsUk4r6v0L5`\n    const resp =  await fetch(url);\n    const {data} = await resp.json();\n    const gifts = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images.downsized_medium.url\n        }\n    })\n    return gifts;\n}","import React from 'react'\n\nconst  GifGridItem = ({id, title, url})=> {\n    return (\n        <div className=\"card animate__animated animate__bounce animate__fadeIn\">\n            <img src={ url } alt= { title } />\n            <p>{title}</p>\n        </div>\n    )\n}\n\nexport default GifGridItem;","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\nconst GifGrid = ({category})=> {\n    \n    const {data:images, loading} = useFetchGifs(category);\n\n    return (\n        <>\n        <h3 className=\"animate__animated animate__bounce animate__fadeIn\">{category}</h3>\n        {loading && <p className=\"animate__animated animate__bounce animate__flash\">Loading</p>}\n        \n        <div className=\"card-grid\">\n            <ol>\n                {\n                    images.map(img => (\n                        <GifGridItem key={img.id}  {...img} />\n                    ))\n                }\n            </ol>\n            </div> \n        \n        </>\n    )\n}\n\nexport default GifGrid;","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) =>{\n    const [state, setstate] = useState({\n        data:[],\n        loading:true\n    });\n    useEffect(() => {\n        getGifs(category).then(imgs => setstate({data:imgs,loading:false}))\n    }, [category])\n\n    return state;\n}\n","import React,{ useState } from \"react\"\nimport AddCategory from \"./components/AddCategory\"\nimport GifGrid from \"./components/GifGrid\"\n\nconst GifExpertApp = ()=> {\n\nconst [categories,setCategories] =  useState(['One Punch'])\n\n\n\nreturn (\n        <>\n          <h2>GifExpertApp</h2>\n          <AddCategory setCategory={ setCategories }/>\n          <hr/>\n          <ol>\n              {\n                  categories.map((category) => (\n                        <GifGrid key={category} category={category} />\n                  ))\n              }\n          </ol>\n        </>\n    )\n}\n\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp'\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}